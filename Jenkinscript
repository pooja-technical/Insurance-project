pipeline {
   agent any

tools { 
   maven 'M2_HOME' 
  }

stages {
  stage('Git Chekout')  {
    steps {
         echo 'Cloning Code from github'
     git branch: 'main', url: 'https://github.com/pooja-technical/Insurance-project'
          }
     }

  stage('Code Build') {
       steps {
          echo 'Packaging the code'
      sh 'mvn install'
            }
     }
  stage('Get HTTP Report')  {
     steps {
       publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/Insurance-project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                    }
              }

   stage('Creating a Docker Image') {
     steps  {
        sh 'docker build -t poojajm/insurance-project:1 .'
          }
    }

    stage('Adding Credentials for Dockerhub login')  {
      steps {
         withCredentials([usernamePassword(credentialsId: 'dockerlogin', passwordVariable: 'docker_passwd', usernameVariable: 'docker_name')]) {
        sh 'docker login -u ${docker_name} -p ${docker_passwd}'
                  }
               }
           }
   stage('Docker Image Push')  {
     steps {
       sh 'docker push poojajm/insurance-project:1'
         }
     }
   stage('Regenerate SSH Key') {
            steps {
                script {
                    // Execute shell commands to generate a new SSH key pair
                    sh '''
                        ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ''
                    '''
                }
            }
        }

        stage('Copy Public Key to Target Host') {
            steps {
                script {
                    // Execute shell command to copy the public key to the target host
                    sh 'ssh-copy-id -i ~/.ssh/id_rsa.pub user@54.173.12.49'
                    
                }
            }
        }
        
        // Add additional stages for Ansible configuration, etc.
    

    stage('Ansible configuration for app-deploy') {
       steps  { 
           ansiblePlaybook credentialsId: 'ansible-ssh', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: 'playbook.yml', vaultTmpPath: ''
             }
   }
       
  }
}
